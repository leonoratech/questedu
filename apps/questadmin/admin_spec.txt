## Core Instructions
- Follow the github instructions file as part of the core design concepts to be followed

## Personas
- There will be three types of users "superadmin", "instructors" and "students"

## Authentication
- Mentioned in the core instructions file.
- Should support only userid, password flow.
- Signup, Forget password standard operations
- User profile page should follow as per the model defined for the user-model. 
- User should have ability to update the profile upon login.

## Data Model 
- The data model is created and should be followed, which is under the folder 'data\models'
- Understand model described and recommend and implment schema validations for both server and client side.
 
## Business Requirements
- This is an application which will be for a specific college 
- college instructors will be enabled to provide course content to the subjects allocated to them
- students will be able to login to the application and use the content to study and prepare for the exams only.
- this platform is not for evaluating the students with quizzes and assignments.
- this platform is only for content sharing for all possible questions against a course and possible answers that are designed and created by instructors

## superadmin Journey
- Superadmin should be able to login and perform following jobs as below
- Manage college information
- Manage Department information
- Manage Program information
- Manage Subject Information

## Instructor Journey
- A Instructor will be associated to a subject(s)
- Instructor can manage courses owned by him
- Instructor should be able to associate a course to a subject and program (mulitple program association is possible)

## Student Journey
- A student is registered to a program

## Api and UI references
- create a new UI which is simpler 
- Seed database scripts
- api calls

